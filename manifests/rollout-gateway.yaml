apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-demo
  namespace: demo
  annotations:
    notifications.argoproj.io/subscriptions: |
      - trigger: [on-analysis-run-failed, on-analysis-run-error, on-rollout-completed, on-rollout-aborted]
        destinations:
          - service: slack
            recipients: [argo-rollouts]
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rollout-demo
  template:
    metadata:
      labels:
        app: rollout-demo
    spec:
      containers:
      - name: rollout-demo
        image: justinmihigo/python-demo:7
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          #command: ["/nri-python--rollout-demo/newrelic/bin/newrelic-admin"]
          #args: ["run-python", "app.py"]
  strategy:
    canary:
      canaryService: rollout-demo-canary
      stableService: rollout-demo-stable
      trafficRouting:
        plugins:
          argoproj-labs/gatewayAPI:
            httpRoute: rollout-demo-route
            namespace: demo
      steps:
      - setWeight: 30
      - analysis:
          templates:
          - templateName: rollout-success-rate
          - templateName: rollout-error-rate
          - templateName: rollout-transaction-time
          args:
          - name: application-name
            value: Njk0MDU5NHxBUE18QVBQTElDQVRJT058NDM3MDcxNTg0
      - pause: { duration: 60s }
      - setWeight: 60
      - pause: { duration: 60s }
      - setWeight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: rollout-demo-stable
  namespace: demo
spec:
  selector:
    app: rollout-demo
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    konghq.com/plugins: ip-whitelist
  name: rollout-demo-canary
  namespace: demo
spec:
  selector:
    app: rollout-demo
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: ClusterIP
